branches:
 only:
  - master
  - /^[0-9]+(\.[0-9]+)*(\.post[0-9]+)?$/

os: linux
dist: focal
language: python
python: "3.8"

matrix:
  include:

    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=3.7.9
        - MACOSX_DEPLOYMENT_TARGET=10.10

    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=3.7.9
        - MACOSX_DEPLOYMENT_TARGET=10.13

    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=2.7.18
        - MACOSX_DEPLOYMENT_TARGET=10.10

    - os: osx
      language: generic
      env:
        - PYTHON_VERSION=2.7.18
        - MACOSX_DEPLOYMENT_TARGET=10.13

    - arch: arm64-graviton2
      virt: vm
      group: edge

    - arch: ppc64le

    - arch: s390x



cache:
  directories:
    # scikit-ci-addons
    - $HOME/downloads

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      # Install official python distribution
      curl -fsSLo /tmp/Python.pkg "https://www.python.org/ftp/python/${PYTHON_VERSION}/python-${PYTHON_VERSION}-macosx10.9.pkg"
      sudo installer -pkg /tmp/Python.pkg -target /
      PYTHON_VERSION2=${PYTHON_VERSION%.*}
      PYTHON_VERSION1=${PYTHON_VERSION2%.*}
      python_executable=/Library/Frameworks/Python.framework/Versions/${PYTHON_VERSION2}/bin/python${PYTHON_VERSION1}

      # Install SSL certificates
      curl -fsSLo /tmp/install_certifi.py https://github.com/joerick/cibuildwheel/raw/v1.10.0/cibuildwheel/resources/install_certifi.py
      sudo ${python_executable} /tmp/install_certifi.py
      ${python_executable} scripts/ssl-check.py

      # Install packages
      ${python_executable} -m pip install --disable-pip-version-check --upgrade pip
      ${python_executable} -m pip install virtualenv

      # Create and activate virtual environment
      ${python_executable} -m virtualenv ${HOME}/.pyenv/versions/${PYTHON_VERSION}
      source ${HOME}/.pyenv/versions/${PYTHON_VERSION}/bin/activate
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        pip install -U scikit-ci scikit-ci-addons
        ci_addons --install ../addons
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        docker run -t --rm \
            -v $(pwd):/io \
            --env TRAVIS=True \
            --env TRAVIS_OS_NAME="${TRAVIS_OS_NAME}" \
            quay.io/pypa/manylinux2014_$(uname -m) \
            /io/scripts/manylinux2014-build-and-test-wheel.sh
    fi

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        ci install
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        MACHINE=$(uname -m)
        if [[ "${MACHINE}" == "s390x" ]] || [[ "${MACHINE}" == "ppc64le" ]]; then
            pip install $(pwd)/cryptography*.whl
        fi
        pip install twine
    fi

script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        ci test
    fi

after_success:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        ci after_test
    fi
    pwd && ls dist; PATH=~/.pyenv/versions/${PYTHON_VERSION}/bin/:$PATH && twine --version

deploy:
  # deploy-release
  - provider: script
    script: pwd && ls dist;echo "deploy-release" && PATH=~/.pyenv/versions/${PYTHON_VERSION}/bin/:$PATH && twine upload -u $PYPI_USER -p $PYPI_PASSWORD --skip-existing dist/*
    skip_cleanup: true
    on:
      repo: ${TRAVIS_REPO_SLUG}
      tags: true
  # deploy-master
  - provider: script
    script: pwd && ls dist;echo "deploy-master" && echo "not implemented"
    skip_cleanup: true
    on:
      repo: ${TRAVIS_REPO_SLUG}
      branch: master

env:
  global:
    # PYPI_USER
    - secure: "Xejg5qGnAyo3G+/TaaAr1uHzDv9GLo3mxi6Aw/hZc9gF9lYix1TvkfE6GEBKdPgSLJSqF9NJrwKTt37XH1DjSRLG+qw6Bt1goi5Bkugdk+SC5qmMkvAoG0EKyD119WS4ObrpzqAFcOQqG+4F6iDkSuJLA+dzA3yAzTME4pkhr/2dn0krOSqIcTlgifPwhEaMgo//WRT2dEBM5dWoehXsEMD7VMOUyC0DlV15lKTPKSzTrDEUPU7UFnXgIqZM/brEPbWPQr5Jzgu7BeBk6bmPiiYeh28Cq2juzOzA+JWcGgJmXOfsImYwYuAWZrf0pkE0uQjLySvIBKT7phJv05eNqIxmv/wHK1BPcyMV+2IgFR4+f5ty6C4VUV0hT0HvHr3pMa/8A/5wSNCShEAMTHrwPM5VPWFJtUKTtS5+wwNQDI39MLk/vr9ZTo+y3WJHPaRR0nRpbA3nXFHSqoJJunoMyeI8x9cXZvJ9IENMxGuo3CfBT5RGZamfqSTgn6NjL51ArIMKpvUfm3tXTtlvCHenED1ZQeJI1nWZEalxl8pTyAZoA8S1+h8wraZrUPzhM0QuVpw7vZQeOYu2VSdHO46yxUWoQyb+JWrDTN7EC8vOl7QQzIQlqOWJB5uDJD7UlKKtneTHJrdfXvGxS/hf+Y+hFZK7r+/PDPS6aQjSNDyy+js="
    # PYPI_PASSWORD
    - secure: "iEHYaOC/yivDupsbRzohWYCwFMZbCfT2hYOM96akQtOfd1d37rqFCFjDKr3BNyvHyHzj+uNQ7IblynWAqu3cax2Z8b9YuIFXFAslD76IIgeIhxmi8jPtamMK0NBXam/LEL49EIVXUnwVZrWjnLcJxVaBHGS/9Ft3zWP5Gspa4G1yAJDhNfs+jrFipxO4DOBie9mGI2jFdbFRgcCYoY6Jo4y95zxUG1YF5e+8sUobLoBgVqyaJP4SP/Zu/4CEWMfJev8EjLBzzkoPwOU+hC09qwf2FQCvBXFrudpjPpY23WDFeKf+LcMoW9tIoUmP6UJcQibqHeidimrbo9jST0+wTo1NYjrvriKrlMho/QS4iYkd5N6DGUrhSXEMSiqfdMjVGDZ00wvCsT3DwqE9eG7K+Kw09enchjcZcggZIt9crqZPJg3GMdSwPYTlRpf2OQmE4OHL3pN5dSH5Es/sb0X1G6JQgB/2Ia9Aks2ywYEdzUZhbMqfLVx75bVS4bLfYMAMhE/j7NxpYaUlVkFhz3srLhnrYyAcvCQ6XF4cSeFfxD1ie62/qFIF/QH5u76t91uURHygvNdyJCNHhVJnnWgN9kPsJxfyfdOC2Dnrz/jJcw5irsgQVO2/K4iyGyBVoOqwwpymjoCkxB8capEoLRNLcwyQqCTBnMtGykyRYF2I7FA="
